name: build and test packages

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-frontend:
    uses: ./.github/workflows/frontend-build.yml

  test:
    name: test
    needs: build-frontend
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: download repo with built frontend
        uses: actions/download-artifact@v4
        with:
          name: repo-with-frontend
          path: .

      - name: install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      
      - name: install tangram (no plugins)
        run:
          uv sync --all-groups --all-packages
      
      # TODO: migrate away from tmux once we properly capture rust tracing along with python logs into a file
      - name: start tangram service (no plugins)
        run: 
          tmux new-session -d -s tangram 'uv run tangram serve --config tangram.example.toml'
          sleep 5
      
      - name: run tests
        env:
          TANGRAM_CONFIG_PATH: tangram.example.toml
        run: uv run pytest packages/tangram/tests/

      - name: print server logs
        if: always()
        run: tmux capture-pane -p -t tangram
      # TODO: run unit tests for each plugin

  # TODO: what about sdist?

  build-hatch-wheels:
    name: build wheels (hatchling)
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: download repo with built frontend
        uses: actions/download-artifact@v4
        with:
          name: repo-with-frontend
          path: .

      - name: install uv
        uses: astral-sh/setup-uv@v6

      # hardcoding for now
      - name: build wheels
        run: |
          mkdir -p wheels
          uv build --package tangram_jet1090
          uv build --package tangram_system
          uv build --package tangram_weather

      - name: upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: wheels/*.whl
          retention-days: 7

  # adapted from: `maturin generate-ci github --platform all`
  build-maturin-wheels:
    name: build wheels (maturin, ${{ matrix.package }}, ${{ matrix.platform.runner }}, ${{ matrix.platform.target }})
    needs: build-frontend
    strategy:
      fail-fast: false
      matrix:
        package: [tangram, tangram_jet1090]
        # excluding: ubuntu x86, armv7, s390x, ppc64le, musllinux_1_2, windows-11-arm,
        # wasm32-unknown-emscripten for simplicity
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: macos-13
            target: x86_64
          - runner: macos-15
            target: aarch64
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86

    runs-on: ${{ matrix.platform.runner }}
    steps:
      - name: download repo with built frontend
        uses: actions/download-artifact@v4
        with:
          name: repo-with-frontend
          path: .

      - name: install uv
        uses: astral-sh/setup-uv@v6

      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          working-directory: packages/${{ matrix.package }}
          args: --release --out ../../dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto

      - name: upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist/*.whl
          retention-days: 7